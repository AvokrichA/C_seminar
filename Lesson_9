// Задача 64: Задайте значение N. Напишите программу, которая выведет все натуральные числа в промежутке от N до 1. Выполнить с помощью рекурсии.

Console.WriteLine("Задайте значение N: ");
int n = Convert.ToInt32(Console.ReadLine());
int count = 1;
Low(n, count);


void Low(int n, int count)
{
    if (count > n)
    {
        return;
    }
    else
    {
        Low(n, count + 1);
        Console.Write(count + " ");
    }
}

//Задача 66: Задайте значения M и N. Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.

Console.Write("Задайте значение M: ");
int m = Convert.ToInt32(Console.ReadLine());

Console.Write("Задайте значение N: ");
int n = Convert.ToInt32(Console.ReadLine());

Sum(m, n);

void Sum(int m, int n)
{
    Console.Write(Summ(m - 1, n));
}


int Summ(int m, int n)
{
    int result = m;
    if (m == n)
        return 0;
    else
    {
        m++;
        result = m + Summ(m, n);
        return result;
    }
}

// Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.

Console.Write("Введите неотрицательное число M : ");
int m = Convert.ToInt32(Console.ReadLine());

Console.Write("Введите неотрицательное число N: ");
int n = Convert.ToInt32(Console.ReadLine());

AkkermanFunction(m,n);


void AkkermanFunction(int m, int n)
{
    Console.Write(Akkerman(m, n)); 
}


int Akkerman(int m, int n)
{
    if (m == 0)
    {
        return n + 1;
    }
    else if (n == 0 && m > 0)
    {
        return Akkerman(m - 1, 1);
    }
    else
    {
        return (Akkerman(m - 1, Akkerman(m, n - 1)));
    }
}
